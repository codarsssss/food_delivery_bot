from aiogram import Dispatcher
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from config import GROUP_ID_ADMIN
from create_bot import bot
from pay_orders import pay_order
from items import *
from database import *
from other import count_date


class FSMClient(StatesGroup):
    application = State()


async def send_welcome(message: types.Message):
    try:
        await bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!\n'
                                                f'–Ø –ø–æ–º–æ–≥—É –í–∞–º —É–¥–æ–±–Ω–æ –∏ –Ω–µ –¥–æ—Ä–æ–≥–æ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –≤–∫—É—Å–Ω—É—é –µ–¥—É –¥–ª—è –≤—Å–µ–π '
                                                f'—Å–µ–º—å–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶!\n'
                                                f'\n–í—ã –º–æ–∂–µ—Ç–µ:\n'
                                                f'\n*‚Ä¢ üéÑ   –∑–∞–∫–∞–∑–∞—Ç—å –ù–æ–≤–æ–≥–æ–¥–Ω–µ–µ –º–µ–Ω—é\n'
                                                f'\n‚Ä¢ üßë‚Äçüç≥   –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é \n'
                                                f'\n‚Ä¢ üõí   —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ \n'
                                                f'\n‚Ä¢ üëë   —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–º, –∫–∞–∫–∏–µ –º—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫–∏ ü§¥* \n'
                                                f'\n_–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—É - –ë–ï–°–ü–õ–ê–¢–ù–û!_', parse_mode='Markdown')
        await send_commands(message)
    except:
        pass


async def send_commands(message: types.Message):
    try:
        await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                               reply_markup=create_main_buttons(message))
    except:
        pass


async def manager_commands(call: types.CallbackQuery):
    try:
        if call.data == 'menu':
            for i in get_menu():
                text_menu = f'*{i[0]}*\n\n–°–æ—Å—Ç–∞–≤: {i[1]}\n'
                await bot.send_photo(call.message.chat.id, i[3], text_menu, parse_mode='Markdown')
            await bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                                   reply_markup=create_main_buttons(call.message))

        elif call.data == 'order':
            if other.flag:
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                            text='*–ü–æ–ª–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞* - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–µ–ª—å–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω 3-4 —á–µ–ª–æ–≤–µ–∫ '
                                                 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶\n '
                                                 'üèãÔ∏è‚Äç‚ôÇÔ∏è–°–æ—Å—Ç–∞–≤–∏—Ç –æ–∫–æ–ª–æ 16 –∫–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.\n'
                                                 '\n*–ü–æ–ª–æ–≤–∏–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã* - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–µ–ª—å–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω 1-2 —á–µ–ª–æ–≤–µ–∫ '
                                                 'üë´ \n '
                                                 'üèãÔ∏è‚Äç‚ôÇÔ∏è–°–æ—Å—Ç–∞–≤–∏—Ç –æ–∫–æ–ª–æ 8 –∫–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.\n'
                                                 '\nüéÑ*–ù–æ–≤–æ–≥–æ–¥–Ω—è—è –∫–æ—Ä–∑–∏–Ω–∞* - —ç—Ç–æ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å—Ç–æ–ª –±–µ–∑ '
                                                 '–ª–∏—à–Ω–µ–π —Å—É–µ—Ç—ã. –ó–∞–π–º–∏—Ç–µ—Å—å —Ç–µ–º, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–æ, –Ω–µ –æ—Ç–≤–ª–µ–∫–∞—è—Å—å '
                                                 '–Ω–∞ –±—ã—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏.\n\n*–î–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã –Ω–∞ –¥–æ–º –Ω–∞ –ù–æ–≤—ã–π –≥–æ–¥* –∏–º–µ–µ—Ç '
                                                 '–º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤, –≥–ª–∞–≤–Ω–æ–µ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö ‚Äì –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å '
                                                 '–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Å—Ç–æ–ª –±–µ–∑ '
                                                 '–∫–∞–∫–∏—Ö-–ª–∏–±–æ —É—Å–∏–ª–∏–π.\n\n*–ù–∞—à —à–µ—Ñ-–ø–æ–≤–∞—Ä* –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –∫ –ù–æ–≤–æ–º—É –≥–æ–¥—É '
                                                 '–ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ –º–µ–Ω—é —Å –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–π –∫–ª–∞—Å—Å–∏–∫–æ–π, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∞–≤—Ç–æ—Ä—Å–∫–∏–º–∏ '
                                                 '–∑–∞–∫—É—Å–∫–∞–º–∏ –∏ –≤—ã—Å–æ–∫–æ–∫–ª–∞—Å—Å–Ω—ã–º–∏ –≥–æ—Ä—è—á–∏–º–∏ –±–ª—é–¥–∞–º–∏.\nüéÖüßë‚ÄçüéÑü§∂',
                                            reply_markup=create_order_buttons(), parse_mode='Markdown')
            else:
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                            text='*–ü–æ–ª–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞* - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–µ–ª—å–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω 3-4 —á–µ–ª–æ–≤–µ–∫ '
                                                 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶\n '
                                                 'üèãÔ∏è‚Äç‚ôÇÔ∏è–°–æ—Å—Ç–∞–≤–∏—Ç –æ–∫–æ–ª–æ 16 –∫–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.\n'
                                                 '\n*–ü–æ–ª–æ–≤–∏–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã* - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–µ–ª—å–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω 1-2 —á–µ–ª–æ–≤–µ–∫ '
                                                 'üë´ \n '
                                                 'üèãÔ∏è‚Äç‚ôÇÔ∏è–°–æ—Å—Ç–∞–≤–∏—Ç –æ–∫–æ–ª–æ 8 –∫–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.',
                                            reply_markup=create_order_buttons(), parse_mode='Markdown')

        elif call.data.split()[0] == 'pay_online':
            if call.data.split()[1] == '3200':
                title = '–ü–æ–ª–æ–≤–∏–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã'
                description = '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–ª—è —Å–µ–º—å–∏ –∏–∑ 2-—Ö —á–µ–ª–æ–≤–µ–∫'
            else:
                title = '–ü–æ–ª–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞'
                description = '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–ª—è —Å–µ–º—å–∏ –∏–∑ 4-—Ö —á–µ–ª–æ–≤–µ–∫'
            await pay_order(call.message, call.data.split()[1], title, description)

        elif call.data.split()[0] == 'get_phone':
            add_clients(get_number() + 1, call.message.chat.id, call.from_user.username, '', '', call.data.split()[1])
            await get_phone(call.message)

        elif call.data == '3200' or call.data == '5400':
            index = 1
            if call.data == '5400':
                index = 2
            await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                        text=show_menu(index), reply_markup=create_choice_order_buttons(call.data))

        elif call.data == 'reorder':
            info = get_user_in_base(call.message.chat.id)
            ready_date = count_date()
            add_clients(get_number() + 1, call.message.chat.id, call.from_user.username, info[1], info[2], info[0])
            text_application = f'‚Ññ {get_number()}\n–û–ø–ª–∞—Ç–∞ - –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏\n–í–∏–¥ - ' \
                               f'{"–ü–æ–ª–æ–≤–∏–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã" if info[0] == "3200" else "–ü–æ–ª–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞"}\n' \
                               f'–ö–ª–∏–µ–Ω—Ç - @{call.from_user.username}\n–¢–µ–ª–µ—Ñ–æ–Ω - {info[1]}\n–ê–¥—Ä–µ—Å - {info[2]}'
            await bot.send_message(GROUP_ID_ADMIN, text_application,
                                   reply_markup=create_status_delivery_buttons(text_application.split()[1]))
            await bot.send_message(call.message.chat.id,
                                   f'–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ üòä\n–ü—Ä–∏–≤–µ–∑—ë–º {ready_date[0]} ({ready_date[1]})\n–° –≤–∞–º–∏ '
                                   f'–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä!\n\n*–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, '
                                   f'–Ω–∞–∂–º–∏—Ç–µ ¬´–∑–∞–∫–∞–∑–∞—Ç—å¬ª –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –∑–∞–Ω–æ–≤–æ*',
                                   parse_mode='Markdown')
            await send_commands(call.message)

        elif call.data.split()[0] == 'delivery':
            user_id = get_user_id(int(call.data.split()[1]))
            await bot.send_message(user_id, '–ö—É—Ä—å–µ—Ä –µ–¥–µ—Ç –∫ –≤–∞–º üöö!\n*–ë—É–¥–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞* ‚è≥', parse_mode='Markdown')
            await bot.edit_message_text(chat_id=call.message.chat.id,
                                        message_id=call.message.message_id,
                                        text=f'–î–û–°–¢–ê–í–ö–ê\n{call.message.text}',
                                        reply_markup=create_status_ready_buttons(call.data.split()[1]))

        elif call.data.split()[0] == 'ready':
            user_id = get_user_id(int(call.data.split()[1]))
            await bot.send_animation(user_id, 'https://media.tenor.com/oNYYcF9NzjoAAAAd/mukbang-food.gif')
            await bot.send_message(user_id, '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!', parse_mode='Markdown')
            await bot.edit_message_text(chat_id=call.message.chat.id,
                                        message_id=call.message.message_id,
                                        text=f'{call.message.text.replace("–î–û–°–¢–ê–í–ö–ê", "–í–´–î–ê–ù")}')

        elif call.data == 'about':
            with open('about.txt', 'r', encoding='utf-8') as info:
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                            text=info.read(), reply_markup=back_in_main())

        elif call.data == 'back':
            await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                                        reply_markup=create_main_buttons(call.message))

        elif call.data == 'new_year':
            new_year_menu = get_menu_new_year()
            for i in new_year_menu:
                text_menu = f'*{i[0]}*\n\n{i[2]}\n'
                await bot.send_photo(call.message.chat.id, i[1], text_menu, parse_mode='Markdown')
            await bot.send_message(call.message.chat.id, '–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è,\n'
                                                         '—Å–æ—Å—Ç–∞–≤ –∫–æ—Ä–∑–∏–Ω—ã '
                                                         '*–Ω–µ –º–µ–Ω—è–µ—Ç—Å—è*\n'
                                                         '30 –¥–µ–∫–∞–±—Ä—è - 9900 —Ä—É–±.\n'
                                                         '31 –¥–µ–∫–∞–±—Ä—è - 10990 —Ä—É–±.', parse_mode='Markdown')
            await bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                                   reply_markup=create_main_buttons(call.message))

        elif call.data == 'new_year_order':
            await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                        text='–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã 30 –¥–µ–∫–∞–±—Ä—è - 9900 —Ä—É–±.\n'
                                             '–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã 31 –¥–µ–∫–∞–±—Ä—è - 10990 —Ä—É–±.\n'
                                             '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏:',
                                        reply_markup=create_new_year_buttons())
    except:
        pass


async def get_phone(message: types.Message):
    await bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ üìûüëá',
                           reply_markup=create_get_phone_buttons())


async def get_address(message: types.Message):
    add_client_phone(message.contact.phone_number, message.chat.id)
    await bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ üèöüìç\n(—É–∫–∞–∂–∏—Ç–µ —É–ª–∏—Ü—É, –¥–æ–º, –ø–æ–¥—ä–µ–∑–¥, —ç—Ç–∞–∂, '
                                            '–∫–≤–∞—Ä—Ç–∏—Ä—É)\n\n`–ü—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫:\n—É–ª. –ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è, –¥ 240, –ø 1,  —ç—Ç 17, '
                                            '–∫–≤ 474`', reply_markup=types.ReplyKeyboardRemove(), parse_mode='Markdown')
    await FSMClient.application.set()


async def send_application(message: types.Message, state=FSMContext):
    add_client_address(message.text, message.chat.id)
    if get_price_order(message.chat.id) == '9900' or get_price_order(message.chat.id) == '10990':
        text_application = f'‚Ññ {get_number()}\n–û–ø–ª–∞—Ç–∞ - –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏\n–í–∏–¥ - ' \
                           f'{"–ù–æ–≤–æ–≥–æ–¥–Ω—è—è –∫–æ—Ä–∑–∏–Ω–∞ 30 —á–∏—Å–ª–æ" if get_price_order(message.chat.id) == "9900" else "–ù–æ–≤–æ–≥–æ–¥–Ω—è—è –∫–æ—Ä–∑–∏–Ω–∞ 31 —á–∏—Å–ª–æ"}' \
                           f'\n–ö–ª–∏–µ–Ω—Ç - @{message.from_user.username}\n–¢–µ–ª–µ—Ñ–æ–Ω - {get_client_phone(message.chat.id)}' \
                           f'\n–ê–¥—Ä–µ—Å - {message.text}'
        await bot.send_message(message.chat.id,
                               f'–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ üòä\n–ü—Ä–∏–≤–µ–∑—ë–º {"30 –¥–µ–∫–∞–±—Ä—è" if get_price_order(message.chat.id) == "9900" else "31 –¥–µ–∫–∞–±—Ä—è"}\n–° –≤–∞–º–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ '
                               f'—Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä!\n\n*–¢–µ–ø–µ—Ä—å –º—ã –í–∞—Å –∑–Ω–∞–µ–º –∏ —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '
                               f'¬´–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑¬ª\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ ¬´–∑–∞–∫–∞–∑–∞—Ç—å¬ª –∏ '
                               f'–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –∑–∞–Ω–æ–≤–æ*',
                               parse_mode='Markdown')
    else:
        text_application = f'‚Ññ {get_number()}\n–û–ø–ª–∞—Ç–∞ - –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏\n–í–∏–¥ - ' \
                           f'{"–ü–æ–ª–æ–≤–∏–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã" if get_price_order(message.chat.id) == "3200" else "–ü–æ–ª–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞"}' \
                           f'\n–ö–ª–∏–µ–Ω—Ç - @{message.from_user.username}\n–¢–µ–ª–µ—Ñ–æ–Ω - {get_client_phone(message.chat.id)}' \
                           f'\n–ê–¥—Ä–µ—Å - {message.text}'
        ready_date = count_date()
        await bot.send_message(message.chat.id,
                               f'–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ üòä\n–ü—Ä–∏–≤–µ–∑—ë–º {ready_date[0]} ({ready_date[1]})\n–° –≤–∞–º–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ '
                               f'—Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä!\n\n*–¢–µ–ø–µ—Ä—å –º—ã –í–∞—Å –∑–Ω–∞–µ–º –∏ —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '
                               f'¬´–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑¬ª\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ ¬´–∑–∞–∫–∞–∑–∞—Ç—å¬ª –∏ '
                               f'–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –∑–∞–Ω–æ–≤–æ*',
                               parse_mode='Markdown')
    await bot.send_message(GROUP_ID_ADMIN, text_application,
                           reply_markup=create_status_delivery_buttons(text_application.split()[1]))
    await state.finish()
    await send_commands(message)


def client_register_handlers(dp: Dispatcher):
    dp.register_message_handler(send_welcome, commands=['start', 'help'])
    dp.register_callback_query_handler(manager_commands, lambda x: x.data)
    dp.register_message_handler(get_phone)
    dp.register_message_handler(get_address, content_types=['contact'])
    dp.register_message_handler(send_application, state=FSMClient.application)
